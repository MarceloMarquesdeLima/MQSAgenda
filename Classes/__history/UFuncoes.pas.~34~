unit UFuncoes;

interface

uses
  Vcl.Forms, System.SysUtils, UMensagem, Vcl.DBCtrls, Vcl.StdCtrls, Vcl.Dialogs, Vcl.Mask, MQSMaskdit, MQSMaskEdit;

  function fnc_criar_mensagem ( TituloJanela, TituloMSG, MSG , CaminhoIcone, Tipo : String) : boolean;
  procedure prcValidarCamposObrigatorios ( Form : TForm );
  function fncRemoveCaractesres(AsString: String) : String;

implementation


function fncRemoveCaractesres(AsString: String) : String;
var
  I : Integer;
  Limpos : String;

  begin
    Limpos := '';
    for I := 1 to Length(AsString) do
    begin
      if Pos ( Copy(AsString, I, 1), '"!%$#@&¨*().,;:/<>[]{}=+-_\|')  = 0 then
        Limpos := Limpos + Copy(AsString, i, 1);
    end;
    Result := Limpos;
  end;

function fnc_criar_mensagem ( TituloJanela, TituloMSG, MSG , CaminhoIcone, Tipo : String) : boolean;
begin
  Result := False;
  frmMensagem := TfrmMensagem.Create( nil );
  frmMensagem.sTituloJanela := TituloJanela;
  frmMensagem.sTituloMSG    := TituloMSG;
  frmMensagem.sMSG          := MSG;
  frmMensagem.sCaminhoIcone := CaminhoIcone;
  frmMensagem.sTipo         := Tipo;

  frmMensagem.ShowModal;
  Result := frmMensagem.bRespostaMSG;
end;

procedure prcValidarCamposObrigatorios ( Form : TForm );
var i :Integer;
begin
  for I := 0 to Form.ComponentCount - 1 do
  begin
    if Form.Components[i].Tag = 5 then
    begin
      if Form.Components[i] is TDBEdit then
      begin
         if(( Form.Components[i] as TDBEdit).Hint <> '') and
            (( Form.Components[i] as TDBEdit).Text = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TDBEdit).Hint));
                 ( Form.Components[i] as TDBEdit).SetFocus;
                 abort;
              end;
      end;

      if Form.Components[i] is TMQSDBEdit then
      begin
         if(( Form.Components[i] as TMQSDBEdit).Hint <> '') and
            (( Form.Components[i] as TMQSDBEdit).Text = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TMQSDBEdit).Hint));
                 ( Form.Components[i] as TDBEdit).SetFocus;
                 abort;
              end;
      end;


      if Form.Components[i] is TEdit then
      begin
        if(( Form.Components[i] as TEdit).Hint <> '') and
            (( Form.Components[i] as TEdit).Text = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TEdit).Hint));
                 ( Form.Components[i] as TEdit).SetFocus;
                 abort;
              end;
      end;


      if Form.Components[i] is TMaskedit then
         begin
           if(( Form.Components[i] as TMaskedit).Hint <> '') and
            (fncRemoveCaractesres(( Form.Components[i] as TMaskedit).Text) = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TMaskedit).Hint));
                 ( Form.Components[i] as TMaskedit).SetFocus;
                 abort;
              end;
         end;

      if Form.Components[i] is TMQSMaskEdit1 then
         begin
           if(( Form.Components[i] as TMQSMaskEdit1).Hint <> '') and
            (fncRemoveCaractesres(( Form.Components[i] as TMQSMaskEdit1).Text) = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TMQSMaskEdit1).Hint));
                 ( Form.Components[i] as TMaskedit).SetFocus;
                 abort;
              end;
         end;

      if Form.Components[i] is TComboBox then
         begin
           if(( Form.Components[i] as TComboBox).Hint <> '') and
            (( Form.Components[i] as TComboBox).Text = '') Then
              begin
                 ShowMessage('Faltou o preenchimento do Campo '+ ((Form.Components[i] as TComboBox).Hint));
                 ( Form.Components[i] as TComboBox).SetFocus;
                 abort;
              end;
         end;
    end;
  end;
end;

end.
